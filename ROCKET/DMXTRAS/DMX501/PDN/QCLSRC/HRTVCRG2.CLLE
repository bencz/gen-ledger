/* ================================================================= */
/* Object:         HRTVCRG2        *PGM CLP                          */
/*                 Returns the attributes of the passed group        */
/*                                                                   */
/* Synopsis:       The information of the specified group is         */
/*                 retrieved from the iCluster files rather than     */
/*                 from OS/400 cluster services.                     */
/*                                                                   */
/* ----------------------------------------------------------------- */
/*                  Changes made to this source                      */
/*                  ---------------------------                      */
/*                                                                   */
/* Date     Who Description                                          */
/* -------- --- ---------------------------------------------------- */
/* 20040519 FK  Initial delivery                                     */
/* ================================================================= */
             PGM        PARM(&CRG &INFVLD &CRGTYP &CRGSTS &PRINOD +
                          &BCKNOD)

/*           Declare parameter variables                              */
             DCL        VAR(&CRG) TYPE(*CHAR) LEN(10)
             DCL        VAR(&INFVLD) TYPE(*CHAR) LEN(4)
             DCL        VAR(&CRGTYP) TYPE(*CHAR) LEN(5)
             DCL        VAR(&CRGSTS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PRINOD) TYPE(*CHAR) LEN(8)
             DCL        VAR(&BCKNOD) TYPE(*CHAR) LEN(8)

/*           Declare constants                                        */

/*           Declare program variables                                */
             DCL        VAR(&APIERR) TYPE(*CHAR) LEN(8)
             DCL        VAR(&ERROR) TYPE(*LGL) VALUE('0')

             DCL        VAR(&GRPFND) TYPE(*LGL) VALUE('0')

/*           Declare file                                             */
             DCLF       FILE(HIGRPGN21)

/*           Global monitor                                           */
             MONMSG     MSGID(CPF0000 RCR0000) EXEC(GOTO CMDLBL(ERROR))

/* ----------------------------------------------------------------- */
/*           Main line                                               */
/* ----------------------------------------------------------------- */

/*           Initialise                                              */
             CHGVAR     VAR(&INFVLD) VALUE('*NO')

/*           Create file in QTEMP                                    */
             CALL       PGM(HCRTLF) PARM(HIGRPGN21)
             OVRDBF     FILE(HIGRPGN21) TOFILE(QTEMP/HIGRPGN21)

/*           Process all records in DMGROUPS                         */
 LOOP:       RCVF
             MONMSG     MSGID(CPF0864) EXEC(DO)
              RCVMSG     MSGTYPE(*LAST)
              GOTO       CMDLBL(ELOOP)
             ENDDO

             IF         COND(&GROUP *EQ &CRG) THEN(DO)
              CHGVAR     VAR(&GRPFND) VALUE('1')
              CHGVAR     VAR(&PRINOD) VALUE(&CURRPRIM)
              CHGVAR     VAR(&BCKNOD) VALUE(&BACKUP)
              CHGVAR     VAR(&CRGTYP) VALUE('*NONE')
              CHGVAR     VAR(&INFVLD) VALUE('*YES')
              HRTVSTS    ICGROUP(&GROUP) STATUS(&CRGSTS)
              GOTO       CMDLBL(ELOOP)
             ENDDO

             GOTO       CMDLBL(LOOP)

 ELOOP:      IF         COND(*NOT &GRPFND) THEN(DO)
              SNDPGMMSG  MSGID(RCR0003) MSGF(HAUMSG) MSGDTA(&CRG) +
                          MSGTYPE(*ESCAPE)
             ENDDO

             GOTO       CMDLBL(END)

/* ----------------------------------------------------------------- */
/*           Error handling                                          */
/* ----------------------------------------------------------------- */
/*           Ensure that the program does not loop when error        */
 ERROR:      IF         COND(&ERROR) THEN(GOTO CMDLBL(END))
             CHGVAR     VAR(&ERROR) VALUE('1')

/*           Move all *DIAG messages to the previous queue           */
             CHGVAR     VAR(&APIERR) VALUE(X'00000000')
             CALL       PGM(QMHMOVPM) PARM(' ' '*DIAG' X'00000001' +
                          '*' X'00000001' &APIERR)

/*           Resend last escape message                              */
             CHGVAR     VAR(&APIERR) VALUE(X'00000000')
             CALL       PGM(QMHRSNEM) PARM(' ' &APIERR)

 END:        ENDPGM
